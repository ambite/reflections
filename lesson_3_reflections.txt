*** Code 

Setting up the remote github repository

# Set git to use the osxkeychain credential helper
git config --global credential.helper osxkeychain

git remote add origin https://github.com/ambite/reflections.git

git remote -v

# to send all the commits in the master brach to the remote repository (called origin by convention)
git push origin master

# to get the changes done in github by self or by other contributor into the local repository
git pull origin master

# to copy a forked repository into my local machine
git clone https://github.com/ambite/recipes.git

# no need to set up a remote in github when forking. It's done automatically.
ambite (master) recipes $ git remote -v
origin	https://github.com/ambite/recipes.git (fetch)
origin	https://github.com/ambite/recipes.git (push)

# To set up collaborators in github go to settings

# Adding a local file and pushing to github
  568  git add rosquillas-recipe.txt
  569  git status
  570  git commit
  571  git log
  572  git status
  573  git push origin master


# Merging when there are both local and remote changes

git pull origin master = git fetch origin/master + git merge master origin/master

$ git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master

# update origin/master with all the changes in github
git fetch origin

git log origin/master

git diff origin/master master

$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 1 and 1 different commit each, respectively.
  (use "git pull" to merge the remote branch into yours)
nothing to commit, working directory clean

$ git merge master origin/master
Auto-merging chili-recipe.txt
CONFLICT (content): Merge conflict in chili-recipe.txt
Automatic merge failed; fix conflicts and then commit the result.

Resolved issues by editing chili-recipe.txt
 git add chili-recipe.txt
 git commit

I could have got the same effect by running:

 git pull origin master


ambite (master) recipes $ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean


ambite (master) recipes $ git push origin master
Counting objects: 6, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 612 bytes | 0 bytes/s, done.
Total 6 (delta 4), reused 0 (delta 0)
To https://github.com/ambite/recipes.git
   2dad65f..e1bc9a4  master -> master


ambite (master) recipes $ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean


git branch different-oil
git checkout different-oil
git branch

ambite (different-oil) recipes $ git branch
* different-oil
  master

ambite (different-oil) recipes $ git status
On branch different-oil
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   cake-recipe.txt

no changes added to commit (use "git add" and/or "git commit -a")

ambite (different-oil *) recipes $ git add cake-recipe.txt

ambite (different-oil +) recipes $ git commit
[different-oil a0f598f] Change vegetable by canola oil
 1 file changed, 1 insertion(+), 1 deletion(-)
 
ambite (different-oil) recipes $ git push origin different-oil
Counting objects: 3, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 299 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
To https://github.com/ambite/recipes.git
 * [new branch]      different-oil -> different-oil


ambite (different-oil) recipes $ git status
On branch different-oil
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   cake-recipe.txt

no changes added to commit (use "git add" and/or "git commit -a")

ambite (different-oil *) recipes $ git add cake-recipe.txt

ambite (different-oil +) recipes $ git status
On branch different-oil
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   cake-recipe.txt

ambite (different-oil +) recipes $ git commit
[different-oil 0f36390] Fis misspelling of canola
 1 file changed, 1 insertion(+), 1 deletion(-)
 
ambite (different-oil) recipes $ git push origin different-oil 
Counting objects: 3, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 290 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
To https://github.com/ambite/recipes.git
   a0f598f..0f36390  different-oil -> different-oil

ambite (different-oil) recipes $ git commit 
On branch different-oil
nothing to commit, working directory clean

ambite (different-oil) recipes $ git commit --amend
[different-oil 247d30e] Fix misspelling of canola
 Date: Sun Jun 21 21:49:34 2015 -0700
 1 file changed, 1 insertion(+), 1 deletion(-)
 
ambite (different-oil) recipes $ git push origin different-oil 
To https://github.com/ambite/recipes.git
 ! [rejected]        different-oil -> different-oil (non-fast-forward)
error: failed to push some refs to 'https://github.com/ambite/recipes.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

ambite (different-oil) recipes $ git push origin different-oil --force
Counting objects: 3, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 294 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
To https://github.com/ambite/recipes.git
 + 0f36390...247d30e different-oil -> different-oil (forced update)





*** Reflections

When would you want to use a remote repository rather than keeping all your work
local?

    To share my code/files with others. To have a remote backup that I can access 
    from any computer.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    To check whether changes made by others in the remote repository do not conflict with
    my local development copy and be able to fix such conflicts.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a copy of somebody else's repository done at github. It
    credits the original creator. A clone is copy of another
    repository, generally a local copy of a remote github
    repository. After doing a fork, usually one clones the fork to the
    local machine to work on it (rather than on github). A branch is a
    different line of development for some code. It helps to explore
    alternatives. Branches can be merged into other branches. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can use git diff to find differences, 
    You can also use git merge to resolve the differences.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    If working with only another person, we could share files in dropbox, which keeps versions. We could coordinate off-line to merge changes. However, with more than a couple of people, keeping track of changes and merging them will be extremely hard, so a tool like git or github would be much preferred.
    

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
